---
import { mdiDomain } from "@mdi/js";
import { getLocaleFromContext } from "../i18n/astro";
import { localePath } from "../i18n/astro";
import { supportedLocales, defaultLocale, type Locale, t } from "../i18n/config";
const locale = getLocaleFromContext(Astro);
const pathname = Astro.url.pathname;

function buildPathForLocale(target: Locale) {
  const segments = pathname.split('/').filter(Boolean);
  if (segments.length && supportedLocales.includes(segments[0] as Locale)) {
    segments.shift();
  }
  const rest = '/' + segments.join('/');
  const normalized = rest === '/' ? '/' : rest;
  return target === defaultLocale ? normalized : `/${target}${normalized}`;
}
---

<style>
  nav {
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    height: 60px;
    background-color: #333;
    color: white;
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    padding: 0 20px;
    z-index: 1000;
  }
  nav a {
    color: white;
    text-decoration: none;
    margin-left: 15px;
    font-family: Arial, sans-serif;
    font-size: 16px;
  }
  nav a:hover {
    text-decoration: underline;
  }

  #logo {
    justify-self: start;
  }
  .nav-links {
    justify-self: end;
    display: flex;
    align-items: center;
  }
  .lang-switch {
    display: flex;
    gap: 0.4rem;
    margin-left: 1rem;
    font-size: 14px;
  }
  .lang-switch a {
    padding: 2px 6px;
    border-radius: 4px;
    background: rgba(255,255,255,0.1);
  }
  .lang-switch a[aria-current="true"] {
    background: #fff;
    color: #333;
    font-weight: 600;
    cursor: default;
    pointer-events: none;
  }
</style>

<nav>
  <a href={localePath(locale,'/')} id="logo"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="currentColor"><path d={mdiDomain} /></svg></a>
  <div class="nav-links">
  <a href={localePath(locale,'/docs/')}>{t(locale,'docs','navbar')}</a>
  <a href={localePath(locale,'/#join')}>{t(locale,'join','navbar')}</a>
  <div class="lang-switch" role="group" aria-label="Language selector">
    {supportedLocales.map(l => (
      <a href={buildPathForLocale(l)} aria-current={l===locale ? 'true':'false'} lang={l}>{l.toUpperCase()}</a>
    ))}
  </div>
  </div>
</nav>